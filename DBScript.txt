CREATE DATABASE IF NOT EXISTS cbscalendar;
use cbscalendar;
SET SESSION FOREIGN_KEY_CHECKS=0;

/* Create Tables */

CREATE TABLE IF NOT EXISTS calendar
(
	CalendarID int NOT NULL AUTO_INCREMENT,
	Name varchar(255) NOT NULL,
	Active tinyint(1) DEFAULT '1',
	CreatedBy varchar(255) NOT NULL,
	-- 1 = public
	-- 2 = private
	PrivatePublic tinyint(1) NOT NULL DEFAULT '1' COMMENT '1 = public
	2 = private',
	PRIMARY KEY (CalendarID)
);

CREATE TABLE IF NOT EXISTS dailyupdate
(
	date datetime NOT NULL UNIQUE,
	apparentTemperature double,
	summary text,
	qotd varchar(300) NOT NULL,
	msg_type varchar (100) NOT NULL,
	update_timestamp TIMESTAMP DEFAULT NOW() ON UPDATE NOW(),
	PRIMARY KEY (date)
);

CREATE TABLE IF NOT EXISTS QOTD
(
	QOTDID int(5) not null auto_increment,
	Quote text,
	author varchar(255), 
	topic varchar(255),
	PRIMARY KEY (QOTDID)
);

CREATE TABLE IF NOT EXISTS events
(
	eventid int NOT NULL AUTO_INCREMENT,
	cbsEventId varchar(255) Unique,
	type int NOT NULL,
	location int,
	locationName varchar(255),
	createdby int NOT NULL,
	start datetime NOT NULL DEFAULT NOW(),
	end datetime NOT NULL DEFAULT NOW(),
	name varchar(255) NOT NULL,
	text text NOT NULL,
	-- Decides wether the event is an import-event or user created
	-- 
	customevent tinyint(1) COMMENT 'Decides wether the event is an import-event or user created',
	CalendarID int NOT NULL,
	PRIMARY KEY (eventid)
);

CREATE TABLE IF NOT EXISTS locationdata
(
	locationdataid int NOT NULL AUTO_INCREMENT,
	longitude decimal (8,6) NOT NULL,
	latitude decimal (8,6) UNIQUE,
	location_name varchar(255),
	PRIMARY KEY (locationdataid)
);

CREATE TABLE IF NOT EXISTS notes
(
	noteId int NOT NULL AUTO_INCREMENT,
	cbsEventId varchar(255),
	createdBy varchar(255) NOT NULL,
	text text,
	dateTime datetime NOT NULL,
	active bit,
	PRIMARY KEY (noteid)
);

CREATE TABLE IF NOT EXISTS roles
(
	roleid int NOT NULL AUTO_INCREMENT,
	userid int NOT NULL,
	type varchar(200) NOT NULL,
	PRIMARY KEY (roleid)
);

CREATE TABLE IF NOT EXISTS WeatherTable
(
	weatherid int NOT NULLE AUTO_INCREMENT,
	weatherDate varchar(255) NOT NULL, 
	weatherDegrees DECIMAL (3, 2) NOT NULL,
	weatherDesc varchar(255) NOT NULL,
	PRIMARY KEY (weatherid)
);

CREATE TABLE IF NOT EXISTS userevents
(
	userid int NOT NULL,
	CalendarID int NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
	userid int NOT NULL AUTO_INCREMENT,
	email varchar(40) NOT NULL,
	active tinyint(1) DEFAULT '1',
	created datetime NOT NULL DEFAULT NOW(),
	password varchar(200) NOT NULL,
	Admin tinyint(1) DEFAULT '2',
	PRIMARY KEY (userid)
);
/* Create Foreign Keys */
ALTER TABLE events
	ADD FOREIGN KEY (CalendarID)
	REFERENCES Calendar (CalendarID)
	ON UPDATE RESTRICT
;

ALTER TABLE userevents
	ADD FOREIGN KEY (CalendarID)
	REFERENCES Calendar (CalendarID)
	ON UPDATE RESTRICT
;

ALTER TABLE events
	ADD FOREIGN KEY (location)
	REFERENCES locationdata (locationdataid)
	ON UPDATE RESTRICT
;

ALTER TABLE events
	ADD FOREIGN KEY (createdby)
	REFERENCES users (userid)
	ON UPDATE RESTRICT
;

ALTER TABLE roles
	ADD FOREIGN KEY (userid)
	REFERENCES users (userid)
	ON UPDATE RESTRICT
;

ALTER TABLE userevents
	ADD FOREIGN KEY (userid)
	REFERENCES users (userid)
	ON UPDATE RESTRICT
;

ALTER TABLE notes
	ADD FOREIGN KEY (createdby)
	REFERENCES users (userid)
	ON UPDATE RESTRICT
;
/* Create Dummy Account */
INSERT INTO `cbscalendar`.`users`(`email`,`password`, Admin) VALUES("admin@admin.dk","d6YSr320JnLXlp8YYxUcNQ==", '1');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.500160', '55.685454', 'Flintholm');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.529438', '55.681603', 'Solbjerg Plads');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.524756', '55.680476', 'Dit-Lab');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.521812', '55.677934', 'Porcelaenshaven');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.524964', '55.681074', 'Kilen');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.515375', '55.683510', 'Dalgas Have');
INSERT INTO cbscalendar.locationdata (longitude, latitude, location_Name) VALUES ('12.433252', '55.235522', 'Falkoner Bio');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Makrooekonomi (XA)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Makrooekonomi (XB)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Makrooekonomi (LA)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Distribuerede Systemer (LA)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Ledelse af IS - forandring, innovation og viden (XB)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Ledelse af IS - forandring, innovation og viden (XA)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Ledelse af IS - forandring, innovation og viden (LA)', 'admin@admin.dk');
INSERT INTO cbscalendar.calendar (Name, CreatedBy) VALUES ('Virksomhedens oekonomiske styring(3)(LA)', 'admin@admin.dk');